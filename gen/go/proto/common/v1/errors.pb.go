// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/common/v1/errors.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorCode defines standardized error codes across services
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// Client Errors (4xx)
	ErrorCode_ERROR_CODE_INVALID_ARGUMENT  ErrorCode = 1000 // 400 Bad Request
	ErrorCode_ERROR_CODE_VALIDATION_FAILED ErrorCode = 1001 // 400 Bad Request - Validation
	ErrorCode_ERROR_CODE_UNAUTHORIZED      ErrorCode = 1010 // 401 Unauthorized
	ErrorCode_ERROR_CODE_FORBIDDEN         ErrorCode = 1020 // 403 Forbidden
	ErrorCode_ERROR_CODE_NOT_FOUND         ErrorCode = 1030 // 404 Not Found
	ErrorCode_ERROR_CODE_CONFLICT          ErrorCode = 1040 // 409 Conflict
	ErrorCode_ERROR_CODE_GONE              ErrorCode = 1050 // 410 Gone / Expired
	ErrorCode_ERROR_CODE_RATE_LIMITED      ErrorCode = 1060 // 429 Too Many Requests
	// Server Errors (5xx)
	ErrorCode_ERROR_CODE_INTERNAL            ErrorCode = 2000 // 500 Internal Server Error
	ErrorCode_ERROR_CODE_NOT_IMPLEMENTED     ErrorCode = 2010 // 501 Not Implemented
	ErrorCode_ERROR_CODE_BAD_GATEWAY         ErrorCode = 2020 // 502 Bad Gateway - External Service
	ErrorCode_ERROR_CODE_SERVICE_UNAVAILABLE ErrorCode = 2030 // 503 Service Unavailable
	ErrorCode_ERROR_CODE_TIMEOUT             ErrorCode = 2040 // 504 Gateway Timeout
	// Business Logic Errors (6xx)
	ErrorCode_ERROR_CODE_BUSINESS_RULE_VIOLATION  ErrorCode = 3000
	ErrorCode_ERROR_CODE_INSUFFICIENT_PERMISSIONS ErrorCode = 3010
	ErrorCode_ERROR_CODE_QUOTA_EXCEEDED           ErrorCode = 3020
	ErrorCode_ERROR_CODE_WORKFLOW_ERROR           ErrorCode = 3030
	// Authentication/Authorization Errors (7xx)
	ErrorCode_ERROR_CODE_INVALID_CREDENTIALS ErrorCode = 4000
	ErrorCode_ERROR_CODE_TOKEN_EXPIRED       ErrorCode = 4010
	ErrorCode_ERROR_CODE_TOKEN_INVALID       ErrorCode = 4020
	ErrorCode_ERROR_CODE_MFA_REQUIRED        ErrorCode = 4030
	ErrorCode_ERROR_CODE_ACCOUNT_LOCKED      ErrorCode = 4040
	ErrorCode_ERROR_CODE_SESSION_EXPIRED     ErrorCode = 4050
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "ERROR_CODE_UNSPECIFIED",
		1000: "ERROR_CODE_INVALID_ARGUMENT",
		1001: "ERROR_CODE_VALIDATION_FAILED",
		1010: "ERROR_CODE_UNAUTHORIZED",
		1020: "ERROR_CODE_FORBIDDEN",
		1030: "ERROR_CODE_NOT_FOUND",
		1040: "ERROR_CODE_CONFLICT",
		1050: "ERROR_CODE_GONE",
		1060: "ERROR_CODE_RATE_LIMITED",
		2000: "ERROR_CODE_INTERNAL",
		2010: "ERROR_CODE_NOT_IMPLEMENTED",
		2020: "ERROR_CODE_BAD_GATEWAY",
		2030: "ERROR_CODE_SERVICE_UNAVAILABLE",
		2040: "ERROR_CODE_TIMEOUT",
		3000: "ERROR_CODE_BUSINESS_RULE_VIOLATION",
		3010: "ERROR_CODE_INSUFFICIENT_PERMISSIONS",
		3020: "ERROR_CODE_QUOTA_EXCEEDED",
		3030: "ERROR_CODE_WORKFLOW_ERROR",
		4000: "ERROR_CODE_INVALID_CREDENTIALS",
		4010: "ERROR_CODE_TOKEN_EXPIRED",
		4020: "ERROR_CODE_TOKEN_INVALID",
		4030: "ERROR_CODE_MFA_REQUIRED",
		4040: "ERROR_CODE_ACCOUNT_LOCKED",
		4050: "ERROR_CODE_SESSION_EXPIRED",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":              0,
		"ERROR_CODE_INVALID_ARGUMENT":         1000,
		"ERROR_CODE_VALIDATION_FAILED":        1001,
		"ERROR_CODE_UNAUTHORIZED":             1010,
		"ERROR_CODE_FORBIDDEN":                1020,
		"ERROR_CODE_NOT_FOUND":                1030,
		"ERROR_CODE_CONFLICT":                 1040,
		"ERROR_CODE_GONE":                     1050,
		"ERROR_CODE_RATE_LIMITED":             1060,
		"ERROR_CODE_INTERNAL":                 2000,
		"ERROR_CODE_NOT_IMPLEMENTED":          2010,
		"ERROR_CODE_BAD_GATEWAY":              2020,
		"ERROR_CODE_SERVICE_UNAVAILABLE":      2030,
		"ERROR_CODE_TIMEOUT":                  2040,
		"ERROR_CODE_BUSINESS_RULE_VIOLATION":  3000,
		"ERROR_CODE_INSUFFICIENT_PERMISSIONS": 3010,
		"ERROR_CODE_QUOTA_EXCEEDED":           3020,
		"ERROR_CODE_WORKFLOW_ERROR":           3030,
		"ERROR_CODE_INVALID_CREDENTIALS":      4000,
		"ERROR_CODE_TOKEN_EXPIRED":            4010,
		"ERROR_CODE_TOKEN_INVALID":            4020,
		"ERROR_CODE_MFA_REQUIRED":             4030,
		"ERROR_CODE_ACCOUNT_LOCKED":           4040,
		"ERROR_CODE_SESSION_EXPIRED":          4050,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_v1_errors_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_proto_common_v1_errors_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{0}
}

// ErrorCategory groups related error codes
type ErrorCategory int32

const (
	ErrorCategory_ERROR_CATEGORY_UNSPECIFIED      ErrorCategory = 0
	ErrorCategory_ERROR_CATEGORY_VALIDATION       ErrorCategory = 1 // Input validation errors
	ErrorCategory_ERROR_CATEGORY_AUTHENTICATION   ErrorCategory = 2 // Auth related errors
	ErrorCategory_ERROR_CATEGORY_AUTHORIZATION    ErrorCategory = 3 // Permission related errors
	ErrorCategory_ERROR_CATEGORY_RESOURCE         ErrorCategory = 4 // Resource not found, conflict, etc.
	ErrorCategory_ERROR_CATEGORY_EXTERNAL_SERVICE ErrorCategory = 5 // External service errors
	ErrorCategory_ERROR_CATEGORY_INTERNAL         ErrorCategory = 6 // Internal system errors
	ErrorCategory_ERROR_CATEGORY_RATE_LIMITING    ErrorCategory = 7 // Rate limiting errors
	ErrorCategory_ERROR_CATEGORY_BUSINESS_LOGIC   ErrorCategory = 8 // Business rule violations
)

// Enum value maps for ErrorCategory.
var (
	ErrorCategory_name = map[int32]string{
		0: "ERROR_CATEGORY_UNSPECIFIED",
		1: "ERROR_CATEGORY_VALIDATION",
		2: "ERROR_CATEGORY_AUTHENTICATION",
		3: "ERROR_CATEGORY_AUTHORIZATION",
		4: "ERROR_CATEGORY_RESOURCE",
		5: "ERROR_CATEGORY_EXTERNAL_SERVICE",
		6: "ERROR_CATEGORY_INTERNAL",
		7: "ERROR_CATEGORY_RATE_LIMITING",
		8: "ERROR_CATEGORY_BUSINESS_LOGIC",
	}
	ErrorCategory_value = map[string]int32{
		"ERROR_CATEGORY_UNSPECIFIED":      0,
		"ERROR_CATEGORY_VALIDATION":       1,
		"ERROR_CATEGORY_AUTHENTICATION":   2,
		"ERROR_CATEGORY_AUTHORIZATION":    3,
		"ERROR_CATEGORY_RESOURCE":         4,
		"ERROR_CATEGORY_EXTERNAL_SERVICE": 5,
		"ERROR_CATEGORY_INTERNAL":         6,
		"ERROR_CATEGORY_RATE_LIMITING":    7,
		"ERROR_CATEGORY_BUSINESS_LOGIC":   8,
	}
)

func (x ErrorCategory) Enum() *ErrorCategory {
	p := new(ErrorCategory)
	*p = x
	return p
}

func (x ErrorCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_v1_errors_proto_enumTypes[1].Descriptor()
}

func (ErrorCategory) Type() protoreflect.EnumType {
	return &file_proto_common_v1_errors_proto_enumTypes[1]
}

func (x ErrorCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCategory.Descriptor instead.
func (ErrorCategory) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{1}
}

type BackoffStrategy int32

const (
	BackoffStrategy_BACKOFF_STRATEGY_UNSPECIFIED BackoffStrategy = 0
	BackoffStrategy_BACKOFF_STRATEGY_FIXED       BackoffStrategy = 1
	BackoffStrategy_BACKOFF_STRATEGY_LINEAR      BackoffStrategy = 2
	BackoffStrategy_BACKOFF_STRATEGY_EXPONENTIAL BackoffStrategy = 3
	BackoffStrategy_BACKOFF_STRATEGY_FIBONACCI   BackoffStrategy = 4
)

// Enum value maps for BackoffStrategy.
var (
	BackoffStrategy_name = map[int32]string{
		0: "BACKOFF_STRATEGY_UNSPECIFIED",
		1: "BACKOFF_STRATEGY_FIXED",
		2: "BACKOFF_STRATEGY_LINEAR",
		3: "BACKOFF_STRATEGY_EXPONENTIAL",
		4: "BACKOFF_STRATEGY_FIBONACCI",
	}
	BackoffStrategy_value = map[string]int32{
		"BACKOFF_STRATEGY_UNSPECIFIED": 0,
		"BACKOFF_STRATEGY_FIXED":       1,
		"BACKOFF_STRATEGY_LINEAR":      2,
		"BACKOFF_STRATEGY_EXPONENTIAL": 3,
		"BACKOFF_STRATEGY_FIBONACCI":   4,
	}
)

func (x BackoffStrategy) Enum() *BackoffStrategy {
	p := new(BackoffStrategy)
	*p = x
	return p
}

func (x BackoffStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackoffStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_v1_errors_proto_enumTypes[2].Descriptor()
}

func (BackoffStrategy) Type() protoreflect.EnumType {
	return &file_proto_common_v1_errors_proto_enumTypes[2]
}

func (x BackoffStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackoffStrategy.Descriptor instead.
func (BackoffStrategy) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{2}
}

type CircuitBreakerState int32

const (
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_UNSPECIFIED CircuitBreakerState = 0
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_CLOSED      CircuitBreakerState = 1
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_OPEN        CircuitBreakerState = 2
	CircuitBreakerState_CIRCUIT_BREAKER_STATE_HALF_OPEN   CircuitBreakerState = 3
)

// Enum value maps for CircuitBreakerState.
var (
	CircuitBreakerState_name = map[int32]string{
		0: "CIRCUIT_BREAKER_STATE_UNSPECIFIED",
		1: "CIRCUIT_BREAKER_STATE_CLOSED",
		2: "CIRCUIT_BREAKER_STATE_OPEN",
		3: "CIRCUIT_BREAKER_STATE_HALF_OPEN",
	}
	CircuitBreakerState_value = map[string]int32{
		"CIRCUIT_BREAKER_STATE_UNSPECIFIED": 0,
		"CIRCUIT_BREAKER_STATE_CLOSED":      1,
		"CIRCUIT_BREAKER_STATE_OPEN":        2,
		"CIRCUIT_BREAKER_STATE_HALF_OPEN":   3,
	}
)

func (x CircuitBreakerState) Enum() *CircuitBreakerState {
	p := new(CircuitBreakerState)
	*p = x
	return p
}

func (x CircuitBreakerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CircuitBreakerState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_v1_errors_proto_enumTypes[3].Descriptor()
}

func (CircuitBreakerState) Type() protoreflect.EnumType {
	return &file_proto_common_v1_errors_proto_enumTypes[3]
}

func (x CircuitBreakerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CircuitBreakerState.Descriptor instead.
func (CircuitBreakerState) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{3}
}

// RetryInfo provides information about when to retry a failed operation
type RetryInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How long to wait before retrying
	RetryAfter *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=retry_after,json=retryAfter,proto3" json:"retry_after,omitempty"`
	// Maximum number of retries recommended
	MaxRetries int32 `protobuf:"varint,2,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	// Whether this error is retryable
	IsRetryable bool `protobuf:"varint,3,opt,name=is_retryable,json=isRetryable,proto3" json:"is_retryable,omitempty"`
	// Backoff strategy to use
	BackoffStrategy BackoffStrategy `protobuf:"varint,4,opt,name=backoff_strategy,json=backoffStrategy,proto3,enum=common.v1.BackoffStrategy" json:"backoff_strategy,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RetryInfo) Reset() {
	*x = RetryInfo{}
	mi := &file_proto_common_v1_errors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryInfo) ProtoMessage() {}

func (x *RetryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_errors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryInfo.ProtoReflect.Descriptor instead.
func (*RetryInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{0}
}

func (x *RetryInfo) GetRetryAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.RetryAfter
	}
	return nil
}

func (x *RetryInfo) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *RetryInfo) GetIsRetryable() bool {
	if x != nil {
		return x.IsRetryable
	}
	return false
}

func (x *RetryInfo) GetBackoffStrategy() BackoffStrategy {
	if x != nil {
		return x.BackoffStrategy
	}
	return BackoffStrategy_BACKOFF_STRATEGY_UNSPECIFIED
}

// ValidationError provides detailed field-level validation errors
type ValidationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field that failed validation
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Human-readable error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Value that was invalid
	RejectedValue string `protobuf:"bytes,3,opt,name=rejected_value,json=rejectedValue,proto3" json:"rejected_value,omitempty"`
	// Validation rule that was violated
	Rule string `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule,omitempty"`
	// Additional context about the error
	Context       map[string]string `protobuf:"bytes,5,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_proto_common_v1_errors_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_errors_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{1}
}

func (x *ValidationError) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetRejectedValue() string {
	if x != nil {
		return x.RejectedValue
	}
	return ""
}

func (x *ValidationError) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *ValidationError) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

// ServiceError represents a standardized error across all services
type ServiceError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique error identifier for this occurrence
	ErrorId string `protobuf:"bytes,1,opt,name=error_id,json=errorId,proto3" json:"error_id,omitempty"`
	// Correlation ID to trace request across services
	CorrelationId string `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Standardized error code
	Code ErrorCode `protobuf:"varint,3,opt,name=code,proto3,enum=common.v1.ErrorCode" json:"code,omitempty"`
	// Error category for grouping
	Category ErrorCategory `protobuf:"varint,4,opt,name=category,proto3,enum=common.v1.ErrorCategory" json:"category,omitempty"`
	// Human-readable error message
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// Service that generated the error
	Service string `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`
	// Operation that failed
	Operation string `protobuf:"bytes,7,opt,name=operation,proto3" json:"operation,omitempty"`
	// Timestamp when error occurred
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Detailed field validation errors (for validation failures)
	ValidationErrors []*ValidationError `protobuf:"bytes,9,rep,name=validation_errors,json=validationErrors,proto3" json:"validation_errors,omitempty"`
	// Retry information (if applicable)
	RetryInfo *RetryInfo `protobuf:"bytes,10,opt,name=retry_info,json=retryInfo,proto3" json:"retry_info,omitempty"`
	// Additional error context and metadata
	Context map[string]string `protobuf:"bytes,11,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Stack trace (only included in development/debug mode)
	StackTrace string `protobuf:"bytes,12,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	// Nested/caused-by error
	CausedBy *ServiceError `protobuf:"bytes,13,opt,name=caused_by,json=causedBy,proto3" json:"caused_by,omitempty"`
	// Custom error details specific to the service
	Details       *anypb.Any `protobuf:"bytes,14,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceError) Reset() {
	*x = ServiceError{}
	mi := &file_proto_common_v1_errors_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceError) ProtoMessage() {}

func (x *ServiceError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_errors_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceError.ProtoReflect.Descriptor instead.
func (*ServiceError) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceError) GetErrorId() string {
	if x != nil {
		return x.ErrorId
	}
	return ""
}

func (x *ServiceError) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ServiceError) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *ServiceError) GetCategory() ErrorCategory {
	if x != nil {
		return x.Category
	}
	return ErrorCategory_ERROR_CATEGORY_UNSPECIFIED
}

func (x *ServiceError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceError) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ServiceError) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ServiceError) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ServiceError) GetValidationErrors() []*ValidationError {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

func (x *ServiceError) GetRetryInfo() *RetryInfo {
	if x != nil {
		return x.RetryInfo
	}
	return nil
}

func (x *ServiceError) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ServiceError) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *ServiceError) GetCausedBy() *ServiceError {
	if x != nil {
		return x.CausedBy
	}
	return nil
}

func (x *ServiceError) GetDetails() *anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

// CircuitBreakerError provides information about circuit breaker state
type CircuitBreakerError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current state of the circuit breaker
	State CircuitBreakerState `protobuf:"varint,1,opt,name=state,proto3,enum=common.v1.CircuitBreakerState" json:"state,omitempty"`
	// Number of consecutive failures
	FailureCount int32 `protobuf:"varint,2,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	// When the circuit will transition to half-open
	NextAttempt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=next_attempt,json=nextAttempt,proto3" json:"next_attempt,omitempty"`
	// Success threshold to close circuit
	SuccessThreshold int32 `protobuf:"varint,4,opt,name=success_threshold,json=successThreshold,proto3" json:"success_threshold,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CircuitBreakerError) Reset() {
	*x = CircuitBreakerError{}
	mi := &file_proto_common_v1_errors_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CircuitBreakerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreakerError) ProtoMessage() {}

func (x *CircuitBreakerError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_errors_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreakerError.ProtoReflect.Descriptor instead.
func (*CircuitBreakerError) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_errors_proto_rawDescGZIP(), []int{3}
}

func (x *CircuitBreakerError) GetState() CircuitBreakerState {
	if x != nil {
		return x.State
	}
	return CircuitBreakerState_CIRCUIT_BREAKER_STATE_UNSPECIFIED
}

func (x *CircuitBreakerError) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *CircuitBreakerError) GetNextAttempt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextAttempt
	}
	return nil
}

func (x *CircuitBreakerError) GetSuccessThreshold() int32 {
	if x != nil {
		return x.SuccessThreshold
	}
	return 0
}

var File_proto_common_v1_errors_proto protoreflect.FileDescriptor

const file_proto_common_v1_errors_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/common/v1/errors.proto\x12\tcommon.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\xd3\x01\n" +
	"\tRetryInfo\x12;\n" +
	"\vretry_after\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"retryAfter\x12\x1f\n" +
	"\vmax_retries\x18\x02 \x01(\x05R\n" +
	"maxRetries\x12!\n" +
	"\fis_retryable\x18\x03 \x01(\bR\visRetryable\x12E\n" +
	"\x10backoff_strategy\x18\x04 \x01(\x0e2\x1a.common.v1.BackoffStrategyR\x0fbackoffStrategy\"\xfb\x01\n" +
	"\x0fValidationError\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0erejected_value\x18\x03 \x01(\tR\rrejectedValue\x12\x12\n" +
	"\x04rule\x18\x04 \x01(\tR\x04rule\x12A\n" +
	"\acontext\x18\x05 \x03(\v2'.common.v1.ValidationError.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbd\x05\n" +
	"\fServiceError\x12\x19\n" +
	"\berror_id\x18\x01 \x01(\tR\aerrorId\x12%\n" +
	"\x0ecorrelation_id\x18\x02 \x01(\tR\rcorrelationId\x12(\n" +
	"\x04code\x18\x03 \x01(\x0e2\x14.common.v1.ErrorCodeR\x04code\x124\n" +
	"\bcategory\x18\x04 \x01(\x0e2\x18.common.v1.ErrorCategoryR\bcategory\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12\x18\n" +
	"\aservice\x18\x06 \x01(\tR\aservice\x12\x1c\n" +
	"\toperation\x18\a \x01(\tR\toperation\x128\n" +
	"\ttimestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12G\n" +
	"\x11validation_errors\x18\t \x03(\v2\x1a.common.v1.ValidationErrorR\x10validationErrors\x123\n" +
	"\n" +
	"retry_info\x18\n" +
	" \x01(\v2\x14.common.v1.RetryInfoR\tretryInfo\x12>\n" +
	"\acontext\x18\v \x03(\v2$.common.v1.ServiceError.ContextEntryR\acontext\x12\x1f\n" +
	"\vstack_trace\x18\f \x01(\tR\n" +
	"stackTrace\x124\n" +
	"\tcaused_by\x18\r \x01(\v2\x17.common.v1.ServiceErrorR\bcausedBy\x12.\n" +
	"\adetails\x18\x0e \x01(\v2\x14.google.protobuf.AnyR\adetails\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdc\x01\n" +
	"\x13CircuitBreakerError\x124\n" +
	"\x05state\x18\x01 \x01(\x0e2\x1e.common.v1.CircuitBreakerStateR\x05state\x12#\n" +
	"\rfailure_count\x18\x02 \x01(\x05R\ffailureCount\x12=\n" +
	"\fnext_attempt\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vnextAttempt\x12+\n" +
	"\x11success_threshold\x18\x04 \x01(\x05R\x10successThreshold*\xf9\x05\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1bERROR_CODE_INVALID_ARGUMENT\x10\xe8\a\x12!\n" +
	"\x1cERROR_CODE_VALIDATION_FAILED\x10\xe9\a\x12\x1c\n" +
	"\x17ERROR_CODE_UNAUTHORIZED\x10\xf2\a\x12\x19\n" +
	"\x14ERROR_CODE_FORBIDDEN\x10\xfc\a\x12\x19\n" +
	"\x14ERROR_CODE_NOT_FOUND\x10\x86\b\x12\x18\n" +
	"\x13ERROR_CODE_CONFLICT\x10\x90\b\x12\x14\n" +
	"\x0fERROR_CODE_GONE\x10\x9a\b\x12\x1c\n" +
	"\x17ERROR_CODE_RATE_LIMITED\x10\xa4\b\x12\x18\n" +
	"\x13ERROR_CODE_INTERNAL\x10\xd0\x0f\x12\x1f\n" +
	"\x1aERROR_CODE_NOT_IMPLEMENTED\x10\xda\x0f\x12\x1b\n" +
	"\x16ERROR_CODE_BAD_GATEWAY\x10\xe4\x0f\x12#\n" +
	"\x1eERROR_CODE_SERVICE_UNAVAILABLE\x10\xee\x0f\x12\x17\n" +
	"\x12ERROR_CODE_TIMEOUT\x10\xf8\x0f\x12'\n" +
	"\"ERROR_CODE_BUSINESS_RULE_VIOLATION\x10\xb8\x17\x12(\n" +
	"#ERROR_CODE_INSUFFICIENT_PERMISSIONS\x10\xc2\x17\x12\x1e\n" +
	"\x19ERROR_CODE_QUOTA_EXCEEDED\x10\xcc\x17\x12\x1e\n" +
	"\x19ERROR_CODE_WORKFLOW_ERROR\x10\xd6\x17\x12#\n" +
	"\x1eERROR_CODE_INVALID_CREDENTIALS\x10\xa0\x1f\x12\x1d\n" +
	"\x18ERROR_CODE_TOKEN_EXPIRED\x10\xaa\x1f\x12\x1d\n" +
	"\x18ERROR_CODE_TOKEN_INVALID\x10\xb4\x1f\x12\x1c\n" +
	"\x17ERROR_CODE_MFA_REQUIRED\x10\xbe\x1f\x12\x1e\n" +
	"\x19ERROR_CODE_ACCOUNT_LOCKED\x10\xc8\x1f\x12\x1f\n" +
	"\x1aERROR_CODE_SESSION_EXPIRED\x10\xd2\x1f*\xb7\x02\n" +
	"\rErrorCategory\x12\x1e\n" +
	"\x1aERROR_CATEGORY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19ERROR_CATEGORY_VALIDATION\x10\x01\x12!\n" +
	"\x1dERROR_CATEGORY_AUTHENTICATION\x10\x02\x12 \n" +
	"\x1cERROR_CATEGORY_AUTHORIZATION\x10\x03\x12\x1b\n" +
	"\x17ERROR_CATEGORY_RESOURCE\x10\x04\x12#\n" +
	"\x1fERROR_CATEGORY_EXTERNAL_SERVICE\x10\x05\x12\x1b\n" +
	"\x17ERROR_CATEGORY_INTERNAL\x10\x06\x12 \n" +
	"\x1cERROR_CATEGORY_RATE_LIMITING\x10\a\x12!\n" +
	"\x1dERROR_CATEGORY_BUSINESS_LOGIC\x10\b*\xae\x01\n" +
	"\x0fBackoffStrategy\x12 \n" +
	"\x1cBACKOFF_STRATEGY_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16BACKOFF_STRATEGY_FIXED\x10\x01\x12\x1b\n" +
	"\x17BACKOFF_STRATEGY_LINEAR\x10\x02\x12 \n" +
	"\x1cBACKOFF_STRATEGY_EXPONENTIAL\x10\x03\x12\x1e\n" +
	"\x1aBACKOFF_STRATEGY_FIBONACCI\x10\x04*\xa3\x01\n" +
	"\x13CircuitBreakerState\x12%\n" +
	"!CIRCUIT_BREAKER_STATE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cCIRCUIT_BREAKER_STATE_CLOSED\x10\x01\x12\x1e\n" +
	"\x1aCIRCUIT_BREAKER_STATE_OPEN\x10\x02\x12#\n" +
	"\x1fCIRCUIT_BREAKER_STATE_HALF_OPEN\x10\x03B:Z8github.com/Sentiae/sentiae-protos/gen/go/proto/common/v1b\x06proto3"

var (
	file_proto_common_v1_errors_proto_rawDescOnce sync.Once
	file_proto_common_v1_errors_proto_rawDescData []byte
)

func file_proto_common_v1_errors_proto_rawDescGZIP() []byte {
	file_proto_common_v1_errors_proto_rawDescOnce.Do(func() {
		file_proto_common_v1_errors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_common_v1_errors_proto_rawDesc), len(file_proto_common_v1_errors_proto_rawDesc)))
	})
	return file_proto_common_v1_errors_proto_rawDescData
}

var file_proto_common_v1_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_common_v1_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_common_v1_errors_proto_goTypes = []any{
	(ErrorCode)(0),                // 0: common.v1.ErrorCode
	(ErrorCategory)(0),            // 1: common.v1.ErrorCategory
	(BackoffStrategy)(0),          // 2: common.v1.BackoffStrategy
	(CircuitBreakerState)(0),      // 3: common.v1.CircuitBreakerState
	(*RetryInfo)(nil),             // 4: common.v1.RetryInfo
	(*ValidationError)(nil),       // 5: common.v1.ValidationError
	(*ServiceError)(nil),          // 6: common.v1.ServiceError
	(*CircuitBreakerError)(nil),   // 7: common.v1.CircuitBreakerError
	nil,                           // 8: common.v1.ValidationError.ContextEntry
	nil,                           // 9: common.v1.ServiceError.ContextEntry
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 11: google.protobuf.Any
}
var file_proto_common_v1_errors_proto_depIdxs = []int32{
	10, // 0: common.v1.RetryInfo.retry_after:type_name -> google.protobuf.Timestamp
	2,  // 1: common.v1.RetryInfo.backoff_strategy:type_name -> common.v1.BackoffStrategy
	8,  // 2: common.v1.ValidationError.context:type_name -> common.v1.ValidationError.ContextEntry
	0,  // 3: common.v1.ServiceError.code:type_name -> common.v1.ErrorCode
	1,  // 4: common.v1.ServiceError.category:type_name -> common.v1.ErrorCategory
	10, // 5: common.v1.ServiceError.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 6: common.v1.ServiceError.validation_errors:type_name -> common.v1.ValidationError
	4,  // 7: common.v1.ServiceError.retry_info:type_name -> common.v1.RetryInfo
	9,  // 8: common.v1.ServiceError.context:type_name -> common.v1.ServiceError.ContextEntry
	6,  // 9: common.v1.ServiceError.caused_by:type_name -> common.v1.ServiceError
	11, // 10: common.v1.ServiceError.details:type_name -> google.protobuf.Any
	3,  // 11: common.v1.CircuitBreakerError.state:type_name -> common.v1.CircuitBreakerState
	10, // 12: common.v1.CircuitBreakerError.next_attempt:type_name -> google.protobuf.Timestamp
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_common_v1_errors_proto_init() }
func file_proto_common_v1_errors_proto_init() {
	if File_proto_common_v1_errors_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_common_v1_errors_proto_rawDesc), len(file_proto_common_v1_errors_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_common_v1_errors_proto_goTypes,
		DependencyIndexes: file_proto_common_v1_errors_proto_depIdxs,
		EnumInfos:         file_proto_common_v1_errors_proto_enumTypes,
		MessageInfos:      file_proto_common_v1_errors_proto_msgTypes,
	}.Build()
	File_proto_common_v1_errors_proto = out.File
	file_proto_common_v1_errors_proto_goTypes = nil
	file_proto_common_v1_errors_proto_depIdxs = nil
}
